<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.1.1 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC7766 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7766.xml">
<!ENTITY RFC6891 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6891.xml">
<!ENTITY RFC7828 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7828.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC7830 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7830.xml">
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC2136 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC1918 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC2132 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2132.xml">
<!ENTITY RFC5226 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5226.xml">
<!ENTITY RFC7858 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7858.xml">
<!ENTITY RFC6763 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6763.xml">
<!ENTITY I-D.ietf-dnssd-push SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dnssd-push.xml">
<!ENTITY RFC0768 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY RFC1122 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1122.xml">
<!ENTITY I-D.ietf-dprive-padding-policy SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dprive-padding-policy.xml">
<!ENTITY I-D.tale-dnsop-edns0-clientid SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.tale-dnsop-edns0-clientid.xml">
<!ENTITY RFC7258 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7258.xml">
<!ENTITY RFC6973 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6973.xml">
<!ENTITY RFC8165 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8165.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-dnsop-session-signal-05" category="std" updates="RFC 7766, RFC 1035">

  <front>
    <title>DNS Stateful Operations</title>

    <author initials="R." surname="Bellis" fullname="Ray Bellis">
      <organization abbrev="ISC">Internet Systems Consortium, Inc.</organization>
      <address>
        <postal>
          <street>950 Charter Street</street>
          <city>Redwood City</city>
          <code>CA 94063</code>
          <country>USA</country>
        </postal>
        <phone>+1 650 423 1200</phone>
        <email>ray@isc.org</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>1 Infinite Loop</street>
          <city>Cupertino</city>
          <code>CA 95014</code>
          <country>USA</country>
        </postal>
        <phone>+1 408 974 3207</phone>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="J." surname="Dickinson" fullname="John Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>jad@sinodun.com</email>
      </address>
    </author>
    <author initials="S." surname="Dickinson" fullname="Sara Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet Technologies</organization>
      <address>
        <postal>
          <street>Magadalen Centre</street> <street>Oxford Science Park</street>
          <city>Oxford</city>
          <code>OX4 4GA</code>
          <country>United Kingdom</country>
        </postal>
        <email>sara@sinodun.com</email>
      </address>
    </author>
    <author initials="A." surname="Mankin" fullname="Allison Mankin">
      <organization>Salesforce</organization>
      <address>
        <email>allison.mankin@gmail.com</email>
      </address>
    </author>
    <author initials="T." surname="Pusateri" fullname="Tom Pusateri">
      <organization>Unaffiliated</organization>
      <address>
        <postal>
          <street></street>
          <city>Raleigh</city>
          <code>NC 27608</code>
          <country>USA</country>
        </postal>
        <phone>+1 919 867 1330</phone>
        <email>pusateri@bangj.com</email>
      </address>
    </author>

    <date year="2017" month="November" day="30"/>

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a new DNS OPCODE, for DNS Stateful Operations (DSO).
DSO messages are used to communicate operations within persistent
stateful sessions, expressed using type-length-value (TLV) syntax.
This document defines an initial set of TLVs, including ones
used to manage session timeouts and termination.
This mechanism is intended to reduce the overhead of existing 
“per-packet” signaling mechanisms with “per-message” semantics as well as 
defining new stateful operations not defined in EDNS(0).</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The use of transports for DNS other than UDP is being increasingly specified,
for example, DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> and DNS over TLS <xref target="RFC7858"/>.
Such transports can offer persistent, long-lived sessions and therefore when
using them for transporting DNS messages it is of benefit to have a mechanism
that can establish parameters associated with those sessions, such as timeouts.
In such situations it is also advantageous to support server initiated messages.</t>

<t>The existing EDNS(0) Extension Mechanism for DNS <xref target="RFC6891"/> is explicitly
defined to only have “per-message” semantics. Whilst EDNS(0) has been used to
signal at least one session-related parameter (the EDNS(0) TCP Keepalive option
<xref target="RFC7828"/>) the result is less than optimal due to the restrictions
imposed by the EDNS(0) semantics and the lack of server-initiated signalling. 
For example, a server cannot arbitrarily 
instruct a client to close a connection because the server can only send EDNS(0) options 
in responses to queries that contained EDNS(0) options.</t>

<t>This document defines a new DNS OPCODE, for DNS Stateful Operations (DSO).
DSO messages are used to communicate operations within persistent
stateful sessions, expressed using type-length-value (TLV) syntax.
This document defines an initial set of TLVs, including ones
used to manage session timeouts and termination.</t>

<t>All three of the TLVs defined here are mandatory for all implementations of DSO.
Additional TLVs may be defined in additional specifications.</t>

<t>It should be noted that the message format for DNS Stateful Operations
(see <xref target="format"/>) differs from the traditional DNS packet
format used for standard queries and responses.
The standard twelve-octet header is used, but the four count fields
(QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) are set to zero and their
corresponding sections are not present.
The actual data pertaining to DNS Stateful Operations
(expressed in TLV format) is appended to the end of the DNS message header.
When displayed using packet analyzer tools that have not been
updated to recognize the DNS Stateful Operations format, this
will result in the Stateful Operations data being displayed
as unknown additional data after the end of the DNS message.
It is likely that future updates to these tools will add the ability
to recognize, decode, and display the Stateful Operations data.</t>

<t>This new format has distinct advantages over an RR-based format because it
is more explicit and more compact. Each TLV definition is specific
to the use case, and as a result contains no redundant or overloaded fields.
Importantly, it completely avoids conflating DNS Stateful Operations in anyway 
with normal DNS operations or with existing EDNS(0) based functionality.
A goal of this approach is to avoid the operational issues that have
befallen EDNS(0), particularly relating to middle-box behaviour.</t>

<t>With EDNS(0), multiple options may be packed into a single OPT pseudo-RR,
and there is no generalized mechanism for a client to be able to tell
whether a server has processed or otherwise acted upon each individual
option within the combined OPT RR.
The specifications for each individual option need to define how each
different option is to be acknowledged, if necessary.</t>

<t>In contrast to EDNS(0), with DNS Stateful Operations there is no
compelling motivation to pack multiple operations into a single
message for efficiency reasons, because DNS Stateful Operations
always operates using a connection-oriented transport protocol.
Each Stateful operation is communicated in its own separate
DNS message, and the transport protocol can take care of packing
separate DNS messages into a single IP packet if appropriate.
For example, TCP can pack multiple small DNS messages into a single TCP segment.
This simplification allows for clearer semantics.
Each DSO request message communicates just one primary operation,
and the RCODE in the corresponding response message indicates the
success or failure of that operation.</t>

</section>
<section anchor="terminology" title="Terminology">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
“Key words for use in RFCs to Indicate Requirement Levels” <xref target="RFC2119"/>.</t>

<t>“DSO” is used to mean DNS Stateful Operation.</t>

<t>The term “connection” means a bidirectional byte stream of reliable,
in-order messages, such as provided by using
DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/> or DNS over TLS <xref target="RFC7858"/>.</t>

<t>The unqualified term “session” in the context of this document means the exchange of
DNS messages over a connection where:</t>

<t><list style="symbols">
  <t>The connection between client and server is persistent and relatively
long-lived (i.e., minutes or hours, rather than seconds).</t>
  <t>Either end of the connection may initiate messages to the other.</t>
</list></t>

<t>A “DSO Session” is established between two endpoints that
acknowledge persistent DNS state via the exchange of DSO messages
over the connection. This is distinct from, for example a DNS-over-TCP session
as described in RC7766.</t>

<t>A “DSO Session” is terminated when the underlying connection is closed.</t>

<t>The term “server” means the software with a listening socket, awaiting
incoming connection requests.</t>

<t>The term “client” means the software which initiates a connection
to the server’s listening socket.</t>

<t>The terms “initiator” and “responder” correspond respectively to the
initial sender and subsequent receiver of a DSO request message,
regardless of which was the “client” and “server” in the usual DNS sense.</t>

<t>The term “sender” may apply to either an initiator
(when sending a DNS Stateful Operation request message)
or a responder (when sending a DNS Stateful Operation response message).</t>

<t>Likewise, the term “receiver” may apply to either a responder
(when receiving a DNS Stateful Operation request message)
or an initiator (when receiving a DNS Stateful Operation response message).</t>

<t>DNS Stateful Operations are expressed using type-length-value (TLV) syntax.</t>

<t>Two timers (elapsed time since an event) are defined in this document:</t>

<t><list style="symbols">
  <t>an inactivity timer (see <xref target="keepalive"/> and <xref target="inactivetimer"/>)</t>
  <t>a keepalive timer (see <xref target="keepalive"/> and <xref target="keepalivetimer"/>)</t>
</list></t>

<t>The timeouts associated with these timers are called the inactivity timeout and 
the keepalive interval respectively. 
The term “Session Timeouts” is used to refer to this pair of timeout values.</t>

<t>Reseting a timer means resetting the timer value to zero and starting the timer 
again. Clearing a timer means resetting the timer value to zero but NOT starting 
the time again.</t>

</section>
<section anchor="discussion" title="Discussion">

<t>There are several use cases for DNS Stateful operations that can 
be described here.</t>

<t>Firstly, establishing session parameters such as server defined timeouts is of 
great use in the 
general management of persistent connections. For example, using DSO sessions 
for stub to recursive DNS-over-TLS <xref target="RFC7858"/> is more flexible for both the 
client and the server than attempting to manage sessions using just the EDNS(0)
TCP Keepalive option
<xref target="RFC7828"/>. The simple set of TLVs defined in this document is
sufficient to greatly enhance connection management for this use case.</t>

<t>Secondly, DNS-SD <xref target="RFC6763"/> has evolved into a naturally session based mechanism where,
for example, long-lived subscriptions lend themselves to ‘push’ mechanisms as 
opposed to polling. Long-lived stateful connections and server initiated 
messages align with this use case <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>A general use case is that DNS traffic is often bursty but session establishment 
can be expensive. One challenge with long-lived connections is to maintain 
sufficient traffic to maintain NAT and firewall state.
To mitigate this issue this document introduces a
new concept for the DNS, that is DSO “Keepalive traffic”.
This traffic carries no DNS data and is not considered ‘activity’
in the classic DNS sense, but serves to maintain state in middle boxes,
and to assure client and server that they still have connectivity to each other.</t>

<t>There are a myriad of other potential use cases for DSO given the versatility 
and extensibility of this specification.</t>

<t><xref target="details"/> of this document describes the protocol details of DNS Stateful
Operations including definitions of three TLVs for session management and 
encryption padding. <xref target="lifecycle"/> presents a
detailed discussion of the DSO Session lifecycle including an
in-depth discussion of keepalive traffic and session termination.</t>

</section>
<section anchor="details" title="Protocol Details">

<section anchor="establishment" title="DSO Session Establishment">

<t>DSO messages MUST only be carried in protocols and in
environments where a session may be established according to the definition above.
Standard DNS over TCP <xref target="RFC1035"/><xref target="RFC7766"/>, and DNS over TLS <xref target="RFC7858"/>
are suitable protocols.</t>

<t>DNS over plain UDP <xref target="RFC0768"/> is not appropriate since it fails on the requirement for
in-order message delivery, and, in the presence of NAT gateways and firewalls
with short UDP timeouts, it fails to provide a persistent bi-directional
communication channel unless an excessive amount of keepalive traffic is used.</t>

<t>In some environments it may be known in advance by external means
that both client and server support DSO, and in these cases either
client or server may initiate DSO messages at any time.</t>

<t>However, in the typical case a server will not know in advance whether a
client supports DSO, so in general, unless it is known in advance by other means
that a client does support DSO, a server MUST NOT initiate DSO request messages
until a DSO Session has been mutually established, as described below.
Similarly, unless it is known in advance by other means that a server
does support DSO, a client MUST NOT initiate non-response-requiring
DSO request messages until after a DSO Session has been mutually established.</t>

<t>Many, but not all, DSO request messages sent by an initiator
elicit a response from the responder.
Whether or not a given DSO request message elicits a response is
determined by whether or not the first DSO TLV (see <xref target="tlvformat"/>)
in the message (the Primary TLV) is one that is specified to generate a response.</t>

<t>A DSO Session is established over a connection by the client
sending a DSO request message of a kind that requires a response,
such as the DSO Keepalive Operation TLV (see <xref target="keepalive"/>),
and receiving a response, with matching MESSAGE ID, and RCODE
set to NOERROR (0), indicating that the DSO request was successful.</t>

<t>If the RCODE is set to DSONOTIMP (tentatively 11) this indicates
that the server does support DSO, but does not support the particular
operation the client requested.
A server MUST NOT return DSONOTIMP for the DSO Keepalive Operation
TLV. However, in future it is possible that a server may return DSONOTIMP
to the first DSO message sent by the client if a client attempts to
establish a DSO Session using a future response-requiring DSO TLV
which the server does not understand.
If the server returns DSONOTIMP then a DSO Session is not
considered established, but the client is permitted to continue
sending DNS messages on the connection,
including other response-requiring DSO messages such as the DSO Keepalive,
which may result in a successful NOERROR response,
yielding the establishment of a DSO Session.</t>

<t>If the RCODE is set to any value other than NOERROR (0) or DSONOTIMP
(tentatively 11), then the client should assume that the server does
not support DSO. In this case the client is permitted to continue
sending DNS messages on that connection, but the client SHOULD NOT
issue further DSO messages on that connection.</t>

<t>When the server receives a response-requiring DSO request message
from a client, and transmits a sucessful NOERROR response to that
request, the server considers the DSO Session established.</t>

<t>When the client receives the server’s NOERROR response to its
DSO request message, the client considers the DSO Session established.</t>

<t>Once a DSO Session has been established,
either end may unilaterally send DSO messages at any time,
and therefore either client or server may be the initiator of a message.</t>

<t>Once a DSO Session has been established,
clients and servers should behave as described in this specification with
regard to inactivity timeouts and connection close, not as prescribed in
the previous specification for DNS over TCP <xref target="RFC7766"/>.</t>

<section anchor="middle-box-considerations" title="Middle-box Considerations">

<t>Where an application-layer middle box (e.g., a DNS proxy, forwarder, or
session multiplexer) is in the path the middle box MUST NOT blindly
forward DSO messages in either direction, and MUST treat the inbound
and outbound connections as separate sessions.  This does not preclude
the use of DSO messages in the presence of an IP-layer middle box such
as a NAT that rewrites IP-layer and/or transport-layer headers, but
otherwise preserves the effect of a single session between the client
and the server.</t>

<t>To illustrate the above, consider a network where a middle box
terminates one or more TCP connections from clients and multiplexes the
queries therein over a single TCP connection to an upstream server.  The
DSO messages and any associated state are specific to the individual
TCP connections.  A DSO-aware middle box MAY in some circumstances be
able to retain associated state and pass it between the client and
server (or vice versa) but this would be highly TLV-specific.  For
example, the middle box may be able to maintain a list of which clients
have made Push Notification subscriptions <xref target="I-D.ietf-dnssd-push"/> and
make its own subscription(s) on their behalf, relaying any subsequent
notifications to the client (or clients) that have subscribed to that
particular notification.</t>

</section>
</section>
<section anchor="format" title="Message Format">

<t>A DSO message begins with
the standard twelve-octet DNS message header <xref target="RFC1035"/>
with the OPCODE field set to the DSO OPCODE (tentatively 6).
However, unlike standard DNS messages, the question section, answer section,
authority records section and additional records sections are not present.
The corresponding count fields (QDCOUNT, ANCOUNT, NSCOUNT, ARCOUNT) MUST be
set to zero on transmission.</t>

<t>If a DSO message is received where any of the count fields are
not zero, then a FORMERR MUST be returned,
unless a future document specifies otherwise.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                          MESSAGE ID                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |QR |    OPCODE     |            Z              |     RCODE     |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     QDCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ANCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     NSCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                     ARCOUNT (MUST be zero)                    |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                           DSO Data                            /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<section anchor="header" title="Header">

<t>In a request the MESSAGE ID field MUST be set to a unique value, that the
initiator is not currently using for any other active operation on this 
connection.
For the purposes here, a MESSAGE ID is in use in this DSO Session if the
initiator has used it in a request for which it has not yet received a
response, or if the client has used it to setup state that it has not yet
deleted. For example, state could be a subscription <xref target="I-D.ietf-dnssd-push"/>.</t>

<t>In a response the MESSAGE ID field MUST contain a copy of the value of the
MESSAGE ID field in the request being responded to.</t>

<t>In a request the DNS Header QR bit MUST be zero (QR=0).
If the QR bit is not zero the message is not a request.</t>

<t>In a response the DNS Header QR bit MUST be one (QR=1).
If the QR bit is not one the message is not a response.</t>

<t>The DNS Header OPCODE field holds the DSO OPCODE value (tentatively 6).</t>

<t>The Z bits are currently unused in DSO messages,
and in both DSO requests and DSO responses the
Z bits MUST be set to zero (0) on transmission and MUST be silently ignored
on reception, unless a future document specifies otherwise.</t>

<t>In a request message (QR=0) the RCODE is generally set to zero on transmission,
and silently ignored on reception, except where specified otherwise
(for example, the Retry Delay operation (see <xref target="delay"/>), where the RCODE indicates the reason
for termination).</t>

<t>The RCODE value in a response may be one of the following values:</t>

<texttable>
      <ttcol align='right'>Code</ttcol>
      <ttcol align='left'>Mnemonic</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>0</c>
      <c>NOERROR</c>
      <c>Operation processed successfully</c>
      <c>1</c>
      <c>FORMERR</c>
      <c>Format error</c>
      <c>2</c>
      <c>SERVFAIL</c>
      <c>Server failed to process request due to a problem with the server</c>
      <c>3</c>
      <c>NXDOMAIN</c>
      <c>Name Error — Named entity does not exist (TLV-dependent)</c>
      <c>4</c>
      <c>NOTIMP</c>
      <c>DSO not supported</c>
      <c>5</c>
      <c>REFUSED</c>
      <c>Operation declined for policy reasons</c>
      <c>9</c>
      <c>NOTAUTH</c>
      <c>Not Authoritative (TLV dependent)</c>
      <c>11</c>
      <c>DSONOTIMP</c>
      <c>DSO type code not supported</c>
</texttable>

<t>Use of the above RCODEs is likely to be common in DSO but 
does not preclude the definition and use of other codes in future documents that 
make use of DSO.</t>

<t>If a document describing a DSO makes use of either NXDOMAIN (Name Error)
or NOTAUTH then that document MUST explain the meaning.</t>

</section>
<section anchor="dsodata" title="DSO Data">

<t>The standard twelve-octet DNS message header is followed by the DSO Data.</t>

<t>The first TLV in a DSO request message is called the Operation 
TLV. Any subsequent TLVs after this initial Operation TLV are called Modifier TLVs.</t>

<t>Depending on the operation a DSO response can contain:</t>

<t><list style="symbols">
  <t>No TLVs</t>
  <t>Only an Operation TLV</t>
  <t>An Operation TLV followed by one or more Modifier TLVs</t>
  <t>Only Modifier TLVs</t>
</list></t>

<section anchor="tlvformat" title="TLV Format">

<t>Operation and modifier TLVs both use the same encoding format.</t>

<t>The Acknowledgement bit in an Operation TLV of a request dictates if a response is to be sent. The Operation TLV may or may not be echoed back in the response according to the definition of the TLV. Each Operation TLV definition should stipulate whether an acknowledgement is REQUIRED. If the Operation TLV is not included in the response according to the TLV definition, the matching identifier in the standard DNS Header response is sufficient as an acknowledgement. If the TLV Acknowledgement bit is cleared in a request, a response MUST NOT be sent. The Acknowledgement bit is NEVER set in a response. Modifier TLVs MUST NEVER set the Acknowledgement bit in request or response.</t>

<t>It is by design that Operation TLVs SHOULD normally require a response and, therefore, set the TLV Acknowledgement bit in a request. However, for some Operation TLVs, this may be undesirable and the TLV Acknowledgement bit MAY be cleared in the request.</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   | A |                        DSO-TYPE                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                        DSO DATA LENGTH                        |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                                                               |
   /                      TYPE-DEPENDENT DATA                      /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='A:'>
  A 1-bit TLV Response flag indicating whether or not an Operation TLV requires
a response Acknowledgement. This bit is never set in responses to Operation TLVs and never set in Modifier TLVs in either direction.</t>
  <t hangText='DSO-TYPE:'>
  A 15-bit field in network order giving the type of the current DSO TLV per
the IANA DSO Type Codes Registry.</t>
  <t hangText='DSO DATA LENGTH:'>
  A 16-bit field in network order giving the size in octets of
the TYPE-DEPENDENT DATA.</t>
  <t hangText='TYPE-DEPENDENT DATA:'>
  Type-code specific format.</t>
</list></t>

<t>Where domain names appear within TYPE-DEPENDENT DATA, they MAY be compressed 
using standard DNS name compression. However, the compression MUST NOT point
outside of the TYPE-DEPENDENT DATA section and offsets MUST be from the start
of the TYPE-DEPENDENT DATA.</t>

</section>
<section anchor="operation-tlvs" title="Operation TLVs">

<t>An “Operation TLV” specifies the operation to be performed.</t>

<t>A DSO message MUST contain at most one Operation TLV.</t>

<t>In all cases a DSO request message MUST contain exactly one 
Operation TLV, indicating the operation to be performed.</t>

<t>Depending on the operation, a DSO response message MAY contain no 
Operation TLV, because it is simply a response to a previous request message,
and the MESSAGE ID in the header is sufficient to identify the request in 
question. Or it may contain a single corresponding response Operation TLV, with 
the same DSO-TYPE as in the request message. The specification for each DSO
type determines whether a response for that operation type 
is required to carry the Operation TLV.</t>

<t>If a DSO response is received for an operation which requires
that the response carry an Operation TLV, and the required Operation TLV is not
the first DSO TLV in the response message, then this is a fatal 
error and the recipient of the defective response message MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
<section anchor="modifier-tlvs" title="Modifier TLVs">

<t>A “Modifier TLV” specifies additional parameters
relating to the operation. Immediately following the Operation TLV, if present,
a DSO message MAY contain one or more Modifier TLVs.</t>

</section>
<section anchor="unrecognized-tlvs" title="Unrecognized TLVs">

<t>If a DSO request is received containing an unrecognized
Operation TLV, the receiver MUST send a response with matching
MESSAGE ID, and RCODE DSONOTIMP (tentatively 11). The response MUST NOT contain 
an Operation TLV.</t>

<t>If a DSO message (request or response) is received
containing one or more unrecognized Modifier TLVs, the unrecognized
Modifier TLVs MUST be silently ignored, and the remainder of the message
is interpreted and handled as if the unrecognized parts were not present.</t>

</section>
</section>
<section anchor="edns0-and-tsig" title="EDNS(0) and TSIG">

<t>Since the ARCOUNT field MUST be zero, a DSO message
MUST NOT contain an EDNS(0) option in the additional records section.
If functionality provided by current or future EDNS(0) options is desired
for DSO messages, an Operation TLV or
Modifier TLV needs to be defined to carry the necessary information.</t>

<t>For example, the EDNS(0) Padding Option <xref target="RFC7830"/> used for security purposes
is not permitted in a DSO message,
so if message padding is desired for DSO messages
then the Encryption Padding TLV described in <xref target="padding"/> MUST be used.</t>

<t>Similarly, a DSO message MUST NOT contain a TSIG record.
A TSIG record in a conventional DNS message is added as the last record
in the additional records section, and carries a signature computed over
the preceding message content. Since DSO data appears
after the additional records section, it would not be included in the
signature calculation. 
If use of signatures with DSO messages becomes necessary in the 
future, an explicit Modifier TLV needs to be defined to 
perform this function.</t>

<t>Note however that, while DSO <spanx style="emph">messages</spanx> cannot include
EDNS(0) or TSIG records, a DSO <spanx style="emph">session</spanx> is typically used to 
carry a whole series of DNS messages of different kinds, including DSO
messages, and other DNS message types like Query <xref target="RFC1034"/> 
<xref target="RFC1035"/> and Update <xref target="RFC2136"/>, and those messages can carry EDNS(0) and 
TSIG records.</t>

<t>This specification explicitly prohibits use of the
EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>
in <spanx style="emph">any</spanx> messages sent on a DSO Session (because it duplicates
the functionality provided by the DSO Keepalive operation),
but messages may contain other EDNS(0) options as appropriate.</t>

</section>
</section>
<section anchor="message-handling" title="Message Handling">

<t>The initiator MUST set the value of the QR bit in the DNS header to
zero (0), and the responder MUST set it to one (1).
Every DSO request message (QR=0) with the Acknowledgement bit set in the
operation TLV MUST elicit a response (QR=1), which MUST have the same
MESSAGE ID in the DNS message header as in the corresponding request.
DSO request messages sent by the client with the Acknowledgement
bit set in the operation TLV elicit a response from the server, and
DSO request messages sent by the server with the Acknowledgement
bit set in the operation TLV elicit a response from the client.</t>

<t>A DSO request message (QR=0) with the Acknowledgement bit clear in the
operation TLV MUST NOT elicit a response.</t>

<t>The namespaces of 16-bit MESSAGE IDs are disjoint in each direction.
For example, it is <spanx style="emph">not</spanx> an error for both client and server to send a request
message with the same ID. In effect, the 16-bit MESSAGE ID combined with the 
identity of the initiator (client or server) serves as a 17-bit unique 
identifier for a particular operation on a DSO Session.</t>

<t>As described in <xref target="header"/> An initiator MUST NOT reuse a MESSAGE ID that is 
already in use for an 
outstanding request, unless specified otherwise by the relevant specification 
for the DSO in question. At the very least, this means 
that a MESSAGE ID MUST NOT be reused in a particular direction
on a particular DSO Session while the initiator is waiting for a response to a 
previous request using that MESSAGE ID on that DSO Session,
unless specified otherwise by the relevant 
specification for the DSO in question.
(For a long-lived state the MESSAGE ID for the operation
MUST NOT be reused whilst that state remains active.)</t>

<t>If a client or server receives a response (QR=1) where the MESSAGE ID does not
match any of its outstanding operations, this is a fatal error and it MUST 
immediately terminate the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
<section anchor="dso-response-generation" title="DSO Response Generation">

<t>With most TCP implementations, for DSO requests that generate a response,
the TCP data acknowledgement (generated because data has been received by TCP),
the TCP window update (generated because TCP has delivered that data to the receiving software),
and the DSO response (generated by the receiving application-layer software itself)
are all combined into a single packet.
Combining these three elements into a single packet gives a
potentially significant improvement in network efficiency.</t>

<t>For DSO requests that do not generate a response,
the TCP implementation generally doesn’t have any way to know
that no response will be forthcoming, so it waits fruitlessly
for the application-layer software to generate a response,
until the Delayed ACK timer fires <xref target="RFC1122"/> (typically 200 milliseconds)
and only then does it send the TCP ack and window update.
In conjunction with Nagle’s Algorithm at the sender,
this can delay the sender’s transmission of its next
(non-full-sized) TCP segment, while the sender is waiting for
its previous (non-full-sized) TCP segment to be acknowledged.
Nagle’s Algorithm exists to combine multiple small
application writes into more efficient large TCP segments,
to guard against wasteful use of the network by applications
that would otherwise transmit a stream of small TCP segments,
but in this case Nagle’s Algorithm (created to improve network efficiency)
can interact badly with TCP’s Delayed ACK feature
(also created to improve network efficiency) <xref target="NagleDA"/>.</t>

<t>Possible mitigations for this problem include:</t>

<t><list style="symbols">
  <t>Disabling Nagle’s Algorithm at the sender.
This is not great, because it results in less efficient use of the network.</t>
  <t>Disabling Delayed ACK at the receiver.
This is not great, because it results in less efficient use of the network.</t>
  <t>Using a networking API that lets the receiver signal to the TCP
implementation that the receiver has received and processed a client
request for which it will not be generating any immediate response.
This allows the TCP implementation to operate efficiently in both cases;
for requests that generate a response, the TCP ack, window update, and
DSO response are transmitted together in a single TCP segment,
and for requests that do not generate a response,
the application-layer software informs the TCP implementation
that it should go ahead and send the TCP ack and window update
immediately, without waiting for the Delayed ACK timer.
Unfortunately it is not known at this time which (if any) of the
widely-available networking APIs currently include this capability.</t>
</list></t>

</section>
</section>
<section anchor="lifecycle" title="DSO Session Lifecycle and Timers">

<section anchor="dso-session-initiation" title="DSO Session Initiation">

<t>A session begins when a client makes a new connection to a server.</t>

<t>A DSO Session begin as described in <xref target="establishment"/>.</t>

<t>The client may perform as many DNS operations as it wishes using the
newly created DSO Session. Operations SHOULD be pipelined (i.e., the
client doesn’t need wait for a response before sending the next message).
The server MUST act on messages in the order they are transmitted, but
responses to those messages MAY be sent out of order, if appropriate.</t>

</section>
<section anchor="sessiontimeouts" title="DSO Session Timeouts">

<t>Two timeout values are associated with a DSO Session: the inactivity timeout, and 
the keepalive interval. Both values are carried in the same TLV, the DSO Keepalive
Operation TLV (see section <xref target="keepalive"/>).</t>

<t>The first timeout value, the inactivity timeout, is the maximum time for which
a client may speculatively keep a DSO Session open in the expectation that
it may have future requests to send to that server.</t>

<t>The second timeout value, the keepalive interval, is the maximum permitted
interval between client messages to the server if the client wishes to keep
the DSO Session alive.</t>

<t>The two timeout values are independent. The inactivity timeout may be lower, the 
same, or higher than the keepalive interval, though in most cases the inactivity 
timeout is expected to be shorter than the keepalive interval.</t>

<t>Only when the client has a very long-lived low-traffic state does the 
keepalive interval come into play, to ensure that a sufficient residual
amount of traffic is generated to maintain NAT and firewall state
and to assure client and server that they still have connectivity to each other.</t>

<t>On a new DSO Session, if no explicit DSO Keepalive message exchange has taken 
place, the default value for both timeouts is 15 seconds.
For both timeouts, lower values of the timeout result in higher network traffic
and higher CPU load on the server.</t>

</section>
<section anchor="inactivetimer" title="Inactive DSO Sessions">

<t>At both servers and clients, the generation or reception of any complete
DNS message, including DNS requests, responses, updates, or DSO
messages, resets both timers for that DSO Session, with the exception
that a DSO Keepalive message resets only the keepalive timer, not the inactivity 
timeout timer.</t>

<t>In addition, for as long as the client has an outstanding operation in progress,
the inactivity timer remains cleared, and an inactivity 
timeout cannot occur.</t>

<t>For short-lived DNS operations like traditional queries and updates,
an operation is considered in progress for the time between request and 
response, typically a period of a few hundred milliseconds at most.
At the client, the inactivity timer is cleared upon transmission of a 
request and remains cleared until reception of the corresponding response.
At the server, the inactivity timer is cleared upon reception of a request
and remains cleared until transmission of the corresponding response.</t>

<t>For long-lived DNS Stateful operations, an operation is considered in progress
for as long as the state is active, until it is cancelled.
This means that a DSO Session can exist, with a state 
active, with no messages flowing in either direction, for far longer than the 
inactivity timeout, and this is not an error. This is why there are two separate 
timers: the inactivity timeout, and the keepalive interval.
Just because a DSO Session has no traffic for an extended period of time
does not automatically make that DSO Session “inactive”,
if it has an active state that is awaiting events.</t>

</section>
<section anchor="the-inactivity-timeout" title="The Inactivity Timeout">

<t>The purpose of the inactivity timeout is for the server to balance its trade off 
between the costs of setting up new DSO Sessions and the costs of maintaining inactive 
DSO Sessions. A server with abundant DSO Session capacity can offer a high inactivity timeout, 
to permit clients to keep a speculative DSO Session open for a long time, to save 
the cost of establishing a new DSO Session for future communications with that 
server. A server with scarce memory resources can offer a low inactivity timeout,
to cause clients to promptly close DSO Sessions whenever they have no outstanding
operations with that server, and then create a new DSO Session later when needed.</t>

<section anchor="closing-inactive-dso-sessions" title="Closing Inactive DSO Sessions">

<t>A client is NOT required to wait until the inactivity timeout expires
before closing a DSO Session.
A client MAY close a DSO Session at any time, at the client’s discretion.
If a client determines that it has no current or reasonably anticipated
future need for an inactive DSO Session, then the client SHOULD close that connection.</t>

<t>If, at any time during the life of the DSO Session,
the inactivity timeout value (i.e., 15 seconds by default) elapses
without there being any operation active on the DSO Session,
the client MUST gracefully close the connection with a
TLS close_notify followed by a TCP FIN (or equivalent for other protocols).</t>

<t>If, at any time during the life of the DSO Session,
twice the inactivity timeout value (i.e., 30 seconds by default),
or five seconds, if twice the inactivity timeout value is less than five seconds,
elapses without there being any operation active on the DSO Session,
the server SHOULD consider the client delinquent,
and forcibly abort the DSO Session.
For DSO Sessions over TCP (or over TLS over TCP),
to avoid the burden of having a connection in TIME-WAIT state,
instead of closing the connection gracefully the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).
(In the BSD Sockets API this is achieved by setting the
SO_LINGER option to zero before closing the socket.)</t>

<t>In this context, an operation being active on a DSO Session includes
a query waiting for a response, an update waiting for a response,
or active state,
but not a DSO Keepalive message exchange itself.
A DSO Keepalive message exchange resets only the keepalive
interval timer, not the inactivity timeout timer.</t>

<t>If the client wishes to keep an inactive DSO Session open for longer than
the default duration without having to send traffic every 15 seconds,
then it uses the DSO Keepalive message to request
longer timeout values, as described in <xref target="keepalive"/>.</t>

</section>
<section anchor="values-for-the-inactivity-timeout" title="Values for the Inactivity Timeout">

<t>For the inactivity timeout value, lower values result in
more frequent DSO Session teardown and re-establishment.
Higher values result in larger memory burden to maintain state for
inactive DSO Sessions, but lower traffic and CPU load on the server.</t>

<t>A server may dictate (in a server-initiated Keepalive message,
or in a response to a client-initiated Keepalive request message)
any value it chooses for the inactivity timeout.
When a connection’s inactivity timeout is reached the client MUST
begin closing the idle connection, but a client is NOT REQUIRED
to keep an idle connection open until the inactivity timeout is
reached — a client SHOULD begin closing the connection sooner
if it has no reason to expect future operations with that server
before the inactivity timeout is reached.</t>

<t>A shorter inactivity timeout with a longer keepalive interval signals
to the client that it should not speculatively keep an inactive DSO
Session open for very long without reason, but when it does have an
active reason to keep a DSO Session open, it doesn’t need to be sending
an aggressive level of keepalive traffic to maintain that session.</t>

<t>A longer inactivity timeout with a shorter keepalive interval
signals to the client that it may speculatively keep an inactive
DSO Session open for a long time, but to maintain that inactive
DSO Session it should be sending a lot of keepalive traffic.
This configuration is expected to be less common.</t>

<t>A server may dictate any value it chooses for the inactivity timeout
(either in a response to a client-initiated request, or in a server-initiated message)
including values under one second, or even zero.
An inactivity timeout of zero informs the client that it
should not speculatively maintain idle connections at all, and
as soon as the client has completed the operation or operations relating
to this server, the client should immediately begin closing this session.</t>

<t>A server will abort an idle client session after twice the
inactivity timeout value, or five seconds, whichever is greater.
In the case of a zero inactivity timeout value, this means that
if a client fails to close an idle client session then the server
will forcibly abort the idle session after five seconds.</t>

</section>
</section>
<section anchor="keepalivetimer" title="The Keepalive Interval">

<t>The purpose of the keepalive interval is to manage the generation of
sufficient messages to maintain state in middle boxes (such at NAT gateways
or firewalls) and for the client and server to periodically verify that they
still have connectivity to each other. This allows them to clean up state
when connectivity is lost, and attempt re-connection if appropriate.</t>

<section anchor="keepalive-interval-expiry" title="Keepalive Interval Expiry">

<t>If, at any time during the life of the DSO Session,
the keepalive interval value (i.e., 15 seconds by default) elapses
without any DNS messages being sent or received on a DSO Session,
the client MUST take action to keep the DSO Session alive,
by sending a DSO Keepalive message (see <xref target="keepalive"/>).
A DSO Keepalive message exchange resets only the keepalive timer, 
not the inactivity timer.</t>

<t>If a client disconnects from the network abruptly,
without cleanly closing its DSO Session,
leaving long-lived state uncanceled,
the server learns of this after failing to
receive the required keepalive traffic from that client.
If, at any time during the life of the DSO Session,
twice the keepalive interval value (i.e., 30 seconds by default) elapses
without any DNS messages being sent or received on a DSO Session,
the server SHOULD consider the client delinquent,
and forcibly abort the connection with a TCP RST (or equivalent for other 
protocols).</t>

</section>
<section anchor="values-for-the-keepalive-interval" title="Values for the Keepalive Interval">

<t>For the keepalive interval value, lower values result in higher volume keepalive 
traffic. Higher values of the keepalive interval reduce traffic and CPU load, 
but have minimal effect on the memory burden
at the server, because clients keep a DSO Session open for the same length of time
(determined by the inactivity timeout) regardless of the level of keepalive traffic 
required.</t>

<t>It may be appropriate for clients and servers to select different keepalive 
interval values depending on the nature of the network they are on.</t>

<t>A corporate DNS server that knows it is serving only clients on the internal 
network, with no intervening NAT gateways or firewalls, can impose a higher 
keepalive interval, because frequent keepalive traffic is not required.</t>

<t>A public DNS server that is serving primarily residential consumer clients, 
where it is likely there will be a NAT gateway on the path, may impose a lower 
keepalive interval, to generate more frequent keepalive traffic.</t>

<t>A smart client may be adaptive to its environment. A client using
a private IPv4 address <xref target="RFC1918"/> to communicate with a DNS server
at an address outside that IPv4 private address block,
may conclude that there is likely to be a NAT gateway on the path,
and accordingly request a lower keepalive interval.</t>

<t>For environments where there is a NAT gateway or firewalls on the path, it is
RECOMMENDED that clients request, and servers grant, a keepalive interval of 15
minutes. In other environments it is RECOMMENDED that clients request, and 
servers grant, a keepalive interval of 60 minutes.</t>

<t>Note that the lower the keepalive interval value, the higher the load on client
and server. For example, an keepalive interval value of 100ms would result in a
continuous stream of at least ten messages per second, in both directions,
to keep the DSO Session alive. And, in this extreme example, a single packet loss and
retransmission over a long path could introduce a momentary pause in the stream of messages,
long enough to cause the server to overzealously abort the connection.</t>

<t>Because of this concern, the server MUST NOT send a Keepalive message
(either a response to a client-initiated request, or a server-initiated message)
with an keepalive interval value less than ten seconds.
If a client receives an Keepalive message specifying an keepalive interval value
less than ten seconds this is an error and the client MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="server-initiated-termination-on-error" title="Server-Initiated Termination on Error">

<t>After sending an error response to a client, the server MAY end the DSO Session,
or may allow the DSO Session to remain open. For error conditions
that only affect the single operation in question, the server SHOULD return an
error response to the client and leave the DSO Session open for further operations.
For error conditions that are likely to make all operations unsuccessful in the
immediate future, the server SHOULD return an error response to the client and 
then end the DSO Session by sending a Retry Delay request message, as described in 
<xref target="delay"/>.</t>

</section>
<section anchor="error" title="Client Behaviour in Receiving an Error">

<t>Upon receiving an error response from the server, a client SHOULD NOT
automatically close the DSO Session. An error relating to one particular operation
on a DSO Session does not necessarily imply that all other operations on that
DSO Session have also failed, or that future operations will fail. The client
should assume that the server will make its own decision about whether or not to
end the DSO Session, based on the server’s determination of whether the error
condition pertains to this particular operation, or would also apply to any
subsequent operations. If the server does not end the DSO Session by
sending the client a Retry Delay message (see <xref target="delay"/>) then the client
SHOULD continue to use that DSO Session for subsequent operations.</t>

</section>
<section anchor="server-initiated-termination-on-overload" title="Server-Initiated Termination on Overload">

<t>A server MUST NOT close a DSO Session with a client,
except in certain exceptional circumstances, as outlined below.
In normal operation, closing a DSO Session is the client’s responsibility.
The client makes the determination of when to close a DSO
Session based on an evaluation of both its own needs,
and the inactivity timeout value dictated by the server.</t>

<t>Some exceptional situations where a server may terminate a DSO Session include:</t>

<t><list style="symbols">
  <t>The server is undergoing reconfiguration or maintenance procedures
that require clients to be disconnected.</t>
  <t>The server application software or underlying operating system
is shutting down or restarting.</t>
  <t>The server application software terminates unexpectedly
(perhaps due to a bug that makes it crash).</t>
  <t>The client fails to meets its obligation to generate keepalive
traffic or close an inactive session by the prescribed times
(twice the time interval dictated by the server, or five seconds,
whichever is greater, as described in <xref target="sessiontimeouts"/>).</t>
  <t>The client sends a grossly invalid or malformed request that is
indicative of a seriously defective client implementation (see <xref target="error"/>).</t>
  <t>The server is over capacity and needs to shed some load (see <xref target="retry"/>).</t>
</list></t>

<t>When a server has to close a DSO Session with a client
(because of exceptional circumstances such as those outlined above)
the server SHOULD, whenever possible, send a Retry Delay Operation TLV
(see below) informing the client of the reason for the DSO Session
being closed, and allow the client five seconds to receive it
before the server resorts to forcibly aborting the connection.</t>

</section>
<section anchor="retry" title="Retry Delay Operation TLV">

<t>There may be rare cases where a server is overloaded and wishes to shed load.
If a server is low on resources it MAY simply terminate a client connection with 
a TCP RST (or equivalent for other protocols).
However, the likely behavior of the client may be simply to to treat this as a
network failure and connect
immediately, putting more burden on the server.</t>

<t>Therefore to avoid this reconnection implosion, a server SHOULD instead choose 
to shed client load by sending a Retry Delay request message, with an RCODE of 
SERVFAIL, to inform the client of the overload situation. After sending a Retry 
Delay request message, the server MUST NOT send any further messages on that 
DSO Session.</t>

<t>After sending the Retry Delay request the server SHOULD allow the
client five seconds to close the connection, and if the client has not
closed the connection after five seconds then the server SHOULD abort
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>Upon receipt of a Retry Delay request from the server, the client MUST
make note of the reconnect delay for this server, and then immediately
close the connection.
This is to place the burden of TCP’s TIME-WAIT state on the client.</t>

<t>A Retry Delay request message MUST NOT be initiated by a client.
If a server receives a Retry Delay request message this is an error
and the server MUST immediately terminate the connection with a TCP RST
(or equivalent for other protocols).</t>

<section anchor="outstanding-operations" title="Outstanding Operations">

<t>At the moment a server chooses to initiate a Retry Delay request message
there may be DNS requests already in flight from client to server on this 
DSO Session, which will arrive at the server after its Retry Delay request message 
has been sent.
The server MUST silently ignore such incoming requests, and MUST NOT generate
any response messages for them. When the Retry Delay request message from the
server arrives at the client, the client will determine that any DNS requests
it previously sent on this DSO Session, that have not yet received a response, now 
will certainly not be receiving any response. Such requests should be considered
failed, and should be retried at a later time, as appropriate.</t>

<t>In the case where some, but not all, of the existing operations on a DSO Session 
have become invalid (perhaps because the server has been reconfigured and is no 
longer authoritative for some of the names),
but the server is terminating all DSO Sessions en masse with a REFUSED (5) RCODE,
the RECONNECT DELAY MAY be zero, indicating that the clients SHOULD immediately
attempt to re-establish operations.
It is likely that some of the attempts will be successful and some will not.</t>

<t>In the case where a server is terminating a large number of DSO Sessions at once
(e.g., if the system is restarting) and the server doesn’t want to be inundated 
with a flood of simultaneous retries, it SHOULD send different RECONNECT delay 
values to each client.
These adjustments MAY be selected randomly, pseudorandomly, or deterministically
(e.g., incrementing the time value by one tenth of a second for each successive
client, yielding a post-restart reconnection rate of ten clients per second).</t>

</section>
<section anchor="client-reconnection" title="Client Reconnection">

<t>After a DSO Session is closed by the server, the client SHOULD try to reconnect,
to that server, or to another suitable server, if more than one is available.
If reconnecting to the same server, the client MUST respect the indicated delay
before attempting to reconnect.</t>

<t>If a particular server does not want a client to reconnect (it is being
de-commissioned), it SHOULD set the retry delay to the maximum value (which is
approximately 497 days). If the server will only be out of service for a maintenance
period, it should use a value closer to the expected maintenance window and
not default to a very large delay value or clients may not attempt to reconnect
after it resumes service.</t>

</section>
</section>
</section>
<section anchor="sharing" title="Connection Sharing">

<t>As previously specified for DNS over TCP <xref target="RFC7766"/>,
to mitigate the risk of unintentional server overload, DNS clients
MUST take care to minimize the number of concurrent TCP connections
made to any individual server.  It is RECOMMENDED that for any given
client/server interaction there SHOULD be no more than one connection
for regular queries, one for zone transfers, and one for each
protocol that is being used on top of TCP (for example, if the
resolver was using TLS).
However, it is noted that certain primary/secondary configurations
with many busy zones might need to use more than one TCP
connection for zone transfers for operational reasons
(for example, to support concurrent transfers of multiple zones).</t>

<t>A single server may support multiple services, including DNS Updates 
<xref target="RFC2136"/>, DNS Push Notifications <xref target="I-D.ietf-dnssd-push"/>,
and other services, for one or more DNS zones.
When a client discovers that the target server for several different operations
is the same target hostname and port, the client SHOULD use a single
shared DSO Session for all those operations.
A client SHOULD NOT open multiple connections to the same target host and port
just because the names being operated on are different or
happen to fall within different zones.
This is to reduce unnecessary connection load on the DNS server.</t>

<t>However, server implementers and operators should be aware that connection
sharing may not be possible in all cases.
A single client device may be home to multiple independent client software
instances that don’t coordinate with each other.
Similarly, multiple independent client devices behind the same NAT gateway
will also typically appear to the DNS server as different source ports on
the same client IP address.
Because of these constraints, a DNS server MUST be prepared to accept
multiple connections from different source ports on the same client IP address.</t>

</section>
<section anchor="base-tlvs-for-dns-stateful-operations" title="Base TLVs for DNS Stateful Operations">

<section anchor="delay" title="Retry Delay TLV">

<t>The Retry Delay TLV (DSO-TYPE=0) can be used as an Operation TLV or as
a Modifier TLV.</t>

<t>The TYPE-DEPENDENT DATA for the the Retry Delay TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     RETRY DELAY (32 bits)                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='RETRY DELAY:'>
  a time value, specified as a 32-bit word in network order in units of 
milliseconds, within which the client MUST NOT retry this operation, or retry 
connecting to this server.</t>
</list></t>

<t>The RECOMMENDED value is 10 seconds.</t>

<section anchor="use-as-an-operation-tlv" title="Use as an Operation TLV">

<t>When sent in a DSO request message, from server to client, the 
Retry Delay TLV (0) is considered an Operation TLV. It is used by a server 
to request that a client close the DSO Session and underlying connection, and 
not to reconnect for the indicated time interval.</t>

<t>In this case it applies to the DSO Session as a whole, and the client MUST begin closing the 
DSO Session, as described in <xref target="retry"/>. The RCODE in the message header 
MUST indicate the reason for the termination:</t>

<t><list style="symbols">
  <t>NOERROR indicates a routine shutdown.</t>
  <t>SERVFAIL indicates that the server is overloaded due to resource exhaustion.</t>
  <t>REFUSED indicates that the server has been reconfigured and is no longer able 
to perform one or more of the functions 
currently being performed on this DSO Session (for example, a DNS Push Notification 
server could be reconfigured such that is is no longer accepting DNS Push 
Notification requests for one or more of the currently subscribed names).</t>
</list></t>

<t>This document specifies only these three RCODE values for Retry Delay request.
Servers sending Retry Delay requests SHOULD use one of these three values.
However, future circumstances may create situations where other RCODE values
are appropriate in Retry Delay requests, so clients MUST be prepared
to accept Retry Delay requests with any RCODE value.</t>

<t>An acknowledgement is not desired for a Retry Delay Operation TLV and the TLV
Acknowledgement bit MUST be cleared in the request.</t>

</section>
<section anchor="use-as-a-modifier-tlv" title="Use as a Modifier TLV">

<t>In the case of a client request that returns a nonzero RCODE value,
the server MAY append a Retry Delay TLV (0) to the response,
indicating the time interval during which the client
SHOULD NOT attempt this operation again.</t>

<t>When appended to a DSO response message for some client request,
the Retry Delay TLV (0) is considered a Modifier TLV.</t>

<t>The indicated time interval during which the client SHOULD NOT retry
applies only to the failed operation, not to the DSO Session as a whole.</t>

</section>
</section>
<section anchor="keepalive" title="Keepalive Operation TLV">

<t>The Keepalive Operation TLV (DSO-TYPE=1) performs two functions: to reset the
keepalive timer for the DSO Session and to establish the values for the Session Timeouts.</t>

<t>The Keepalive Operation TLV resets only the keepalive timer, not the inactivity timer.
The reason for this is that periodic Keepalive Operation TLVs are sent for the
sole purpose of keeping a DSO Session alive, because that DSO Session has current
or recent non-maintenance activity that warrants keeping the DSO Session alive.
If sending keepalive traffic itself were to reset the inactivity timer, then 
that would create a circular livelock where keepalive traffic would be sent 
indefinitely to keep a DSO Session alive, where the only activity on that DSO 
Session would be the keepalive traffic keeping the DSO Session alive so that further 
keepalive traffic can be sent.</t>

<t>Sending keepalive traffic is considered a maintenance activity
that is performed in service of other client activities.
Sending keepalive traffic itself is not considered a client activity.
For a DSO Session to be considered active, it must be carrying something more than just keepalive traffic.
This is why merely sending a Keepalive Operation TLV does not reset the inactivity timer.</t>

<t>When sent by a client, the Keepalive Operation TLV MUST have the Acknowledgement bit set.
It resets a DSO Session’s keepalive timer, and at the same time requests what the
Session Timeout values should be from this point forward in the DSO Session.
If a server receives a Keepalive Operation TLV without the Acknowledgement bit set
then this is a fatal error and the server MUST immediately terminate
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>Once a DSO Session is in progress (see <xref target="details"/>) the Keepalive TLV also MAY be initiated by a server.
When sent by a server, the Keepalive Operation TLV MUST NOT have the Acknowledgement bit set.
It resets a DSO Session’s keepalive timer, and unilaterally informs the client of
the new Session Timeout values to use from this point forward in this DSO Session.
No client response to this unilateral declaration is required.
If a client receives a Keepalive Operation TLV with the Acknowledgement bit set
then this is a fatal error and the client MUST immediately terminate
the connection with a TCP RST (or equivalent for other protocols).</t>

<t>It is not required that the Keepalive TLV be used in every DSO Session.
While many DNS Stateful operations
will be used in conjunction with a long-lived session state,
not all DNS Stateful operations require long-lived session state,
and in some cases the default 15-second value for both the inactivity timeout
and keepalive interval may be perfectly appropriate.
However, note that for clients that implement only the TLVs defined in
this document it is the only way for a client to initiate a DSO Session.</t>

<t>The TYPE-DEPENDENT DATA for the the Keepalive TLV is as follows:</t>

<figure><artwork><![CDATA[
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 INACTIVITY TIMEOUT (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 KEEPALIVE INTERVAL (32 bits)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style="hanging">
  <t hangText='INACTIVITY TIMEOUT:'>
  the inactivity timeout for the current DSO Session, specified as a
32-bit word in network (big endian) order in units of milliseconds.
This is the timeout at which the client MUST begin closing an inactive DSO Session.
The inactivity timeout can be any value of the server’s choosing.
If the client does not gracefully close an inactive DSO
Session, then after twice this interval, or five seconds,
whichever is greater, the server will forcibly terminate the
connection with a TCP RST (or equivalent for other protocols).</t>
  <t hangText='KEEPALIVE INTERVAL:'>
  the keepalive interval for the current DSO Session, specified as a
32-bit word in network (big endian) order in units of milliseconds.
This is the interval at which a client MUST generate keepalive
traffic to maintain connection state.
The keepalive interval MUST NOT be less than ten seconds.
If the client does not generate the mandated keepalive traffic,
then after twice this interval the server will forcibly terminate
the connection with a TCP RST (or equivalent for other protocols).
Since the minimum allowed keepalive interval is ten seconds, the
minimum time at which a server will forcibly disconnect a client for
failing to generate the mandated keepalive traffic is twenty seconds.</t>
</list></t>

<t>In a client-initiated DSO Keepalive message,
the Session Timeouts contain the client’s requested values.
In a server response to a client-initiated message, the Session Timeouts contain 
the server’s chosen values, which the client MUST respect.
This is modeled after the DHCP protocol, where the client
requests a certain lease lifetime using DHCP option 51 <xref target="RFC2132"/>,
but the server is the ultimate authority
for deciding what lease lifetime is actually granted.</t>

<t>In a server-initiated DSO Keepalive message, the Session Timeouts
unilaterally inform the client of the new values from this point
forward in this DSO Session. The client MUST NOT generate a
response to the server-initiated DSO Keepalive message.</t>

<t>When a client is sending its second and subsequent Keepalive DSO 
requests to the server, the client SHOULD continue to request its preferred 
values each time. This allows flexibility, so that if conditions change during 
the lifetime of a DSO Session, the server can adapt its responses to better fit 
the client’s needs.</t>

<section anchor="client-handling-of-received-session-timeout-values" title="Client handling of received Session Timeout values">

<t>When a client receives a response to its client-initiated DSO Keepalive message,
or receives a server-initiated DSO Keepalive message, the client has then 
received Session Timeout values dictated by the server. The two timeout values 
contained in the DSO Keepalive TLV from the server may each be higher, lower, or 
the same as the respective Session Timeout values the client previously had for 
this DSO Session.</t>

<t>In the case of the keepalive timer, the handling of the received value is 
straightforward. The act of receiving the message containing the DSO Keepalive 
TLV itself resets the keepalive timer and updates the keepalive interval for the 
DSO Session. The new keepalive interval indicates the 
maximum time that may elapse before another message must be sent
or received on this DSO Session, if the DSO Session is to remain alive.</t>

<t>In the case of the inactivity timeout, the handling of the received value 
is a little more subtle, though the meaning of the inactivity 
timeout is unchanged — it still indicates the maximum permissible time allowed 
without activity on a DSO Session.
The act of receiving the message containing the DSO Keepalive TLV does not
itself reset the inactivity timer. The time elapsed since the last useful
activity on this DSO Session is unaffected by exchange of DSO Keepalive messages.
The new inactivity timeout value in the DSO Keepalive TLV in the received message
does update the timeout associated with the running inactivity timer;
that becomes the new maximum permissible time without activity on a DSO Session.</t>

<t><list style="symbols">
  <t>If the current inactivity timer value is not greater than the
new inactivity timeout, then the DSO Session may remain open for now.
When the inactivity timer value exceeds the new inactivity timeout,
the client MUST then begin closing the DSO Session, as described above.</t>
  <t>If the current inactivity timer value is already greater
than the new inactivity timeout, then this DSO Session has
already been inactive for longer than the server permits,
and the client MUST immediately begin closing this DSO Session.</t>
  <t>If the current inactivity timer value is already more than twice the
new inactivity timeout, then the client is immediately considered delinquent
(this DSO Session is immediately eligible to be forcibly terminated by the server)
and the client MUST immediately begin closing this DSO Session.
However if a server abruptly reduces the inactivity timeout in this
way, then, to give the client time to close the connection gracefully
before the server resorts to terminating it forcibly, the server
SHOULD give the client an additional grace period of one quarter
of the new inactivity timeout, or five seconds, whichever is greater.</t>
</list></t>

</section>
<section anchor="relation-to-edns0-tcp-keepalive-option" title="Relation to EDNS(0) TCP Keepalive Option">

<t>The inactivity timeout value in the Keepalive TLV (DSO-TYPE=1) has similar
intent to the EDNS(0) TCP Keepalive Option <xref target="RFC7828"/>.
A client/server pair that supports DSO MUST NOT use the
EDNS(0) TCP KeepAlive option within any message after a DSO 
Session has been established.
Once a DSO Session has been established, if either
client or server receives a DNS message over the DSO Session that contains an
EDNS(0) TCP Keepalive option, this is an error and the receiver of the
EDNS(0) TCP Keepalive option MUST immediately
terminate the connection with a TCP RST (or equivalent for other protocols).</t>

</section>
</section>
<section anchor="padding" title="Encryption Padding TLV">

<t>The Encryption Padding TLV (DSO-TYPE=2) can only be used as a Modifier TLV.
It is only applicable when the DSO Transport layer uses encryption
such as TLS.</t>

<t>The TYPE-DEPENDENT DATA for the the Padding TLV is optional and is a
variable length field containing non-specified values. A DATA LENGTH
of 0 essentially provides for 4 octets of padding (the minimum amount).</t>

<figure><artwork><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   /                                                               /
   /                   VARIABLE NUMBER OF OCTETS                   /
   /                                                               /
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t>As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
the PADDING octets SHOULD be set to 0x00.  Other values MAY be used,
for example, in cases where there is a concern that the padded
message could be subject to compression before encryption.
PADDING octets of any value MUST be accepted in the messages received.</t>

<t>The Encryption Padding TLV may be included in either a DSO request, response, or both.
As specified for the EDNS(0) Padding Option <xref target="RFC7830"/>
if a request is received with a Encryption Padding TLV,
then the response MUST also include an Encryption Padding TLV.</t>

<t>The length of padding is intentionally not specified in this document and
is a function of current best practices with respect to the type and length
of data in the preceding TLVs <xref target="I-D.ietf-dprive-padding-policy"/>.</t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="dso-opcode-registration" title="DSO OPCODE Registration">

<t>IANA are directed to assign a value (tentatively 6)
in the DNS OPCODEs Registry for the DSO OPCODE.</t>

</section>
<section anchor="dso-rcode-registration" title="DSO RCODE Registration">

<t>IANA are directed to assign a value (tentatively 11)
in the DNS RCODE Registry for the DSONOTIMP error code.</t>

</section>
<section anchor="dso-type-codes-registry" title="DSO Type Codes Registry">

<t>IANA are directed to create the 15-bit DSO Type Codes
Registry, with initial values as follows:</t>

<texttable>
      <ttcol align='right'>Type</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>0x0000</c>
      <c>RetryDelay</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0001</c>
      <c>KeepAlive</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0002</c>
      <c>Encryption Padding</c>
      <c>Standard</c>
      <c>RFC-TBD</c>
      <c>0x0003 - 0x003F</c>
      <c>Unassigned, reserved for DSO session-management TLVs</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x0040 - 0x77FF</c>
      <c>Unassigned</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x7800 - 0x7BFF</c>
      <c>Reserved for local / experimental use</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>0x7C00 - 0x7FFF</c>
      <c>Reserved for future expansion</c>
      <c>&#160;</c>
      <c>&#160;</c>
</texttable>

<t>Registration of additional DSO Type Codes requires publication
of an appropriate IETF “Standards Action” or “IESG Approval” document <xref target="RFC5226"/>.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>If this mechanism is to be used with DNS over TLS, then these messages
are subject to the same constraints as any other DNS over TLS messages
and MUST NOT be sent in the clear before the TLS session is established.</t>

<t>The data field of the “Encryption Padding” TLV could be used as a covert channel.</t>

</section>
<section anchor="privacy-considerations" title="Privacy Considerations">

<t>The intention of this specification is to enable stateful information 
(connection parameters and DNS data) directly related to the DSO Session to be 
transmitted.</t>

<t>Future extensions to this specification (and non-standard implementations) 
could, in principle, define TLVs that include client identifiers and personal 
data in a similar manner to some non-standard deployed uses of EDNS0 
<xref target="I-D.tale-dnsop-edns0-clientid"/>.</t>

<t>Such uses of the protocol are highly likely to compromise the privacy of DNS 
users and increase the tracking capabilities of pervasive monitoring in conflict
with <xref target="RFC7258"/> (Pervasive monitoring is an Attack).</t>

<t>Any such extensions proposed to the IETF would require careful considerations 
with regard to the principles laid out in <xref target="RFC6973"/> (Privacy Considerations for 
Internet Protocols) and <xref target="RFC8165"/> (Design Considerations for Metadata Insertion) 
and should require at a minimum that those options are only used on encrypted 
transports (or the data is directly encrypted)</t>

<t>Any such non-standard uses of this protocol are regarded as a direct violation
of <xref target="RFC7258"/>.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to
Tim Chown,
Ralph Droms,
Jan Komissar,
Manju Shankar Rao,
and Ted Lemon
for their helpful contributions to this document.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1035;
&RFC7766;
&RFC6891;
&RFC7828;
&RFC2119;
&RFC7830;
&RFC1034;
&RFC2136;
&RFC1918;
&RFC2132;
&RFC5226;


    </references>

    <references title='Informative References'>

<reference anchor="NagleDA" target="http://www.stuartcheshire.org/papers/nagledelayedack/">
  <front>
    <title>TCP Performance problems caused by interaction between Nagle's Algorithm and Delayed ACK</title>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization></organization>
    </author>
    <date year="2005" month="May" day="20"/>
  </front>
</reference>
&RFC7858;
&RFC6763;
&I-D.ietf-dnssd-push;
&RFC0768;
&RFC1122;
&I-D.ietf-dprive-padding-policy;
&I-D.tale-dnsop-edns0-clientid;
&RFC7258;
&RFC6973;
&RFC8165;


    </references>



  </back>

<!-- ##markdown-source:
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
1US8Qu8YgAs9R2MgP/f/AHRL7TbwDQEA

-->

</rfc>

